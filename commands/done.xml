<commands>
    <command>
        <name>account_currencies</name>
        <admin>false</admin>
        <desc>Lists the currencies an account can send or receive.</desc>

        <argument>
            <name>account</name>
            <required>true</required>
            <desc>The ID of the account you are interested in.</desc>
        </argument>
        <common>ledger_index</common>


        <result>
            <name>receive_currencies</name>
            <desc>Array of currencies this account is able to receive.</desc>
        </result>
        <result>
            <name>send_currencies</name>
            <desc>Array of currencies this account is able to send.</desc>
        </result>

        <cli_example><![CDATA[
            > stellard account_currencies gM4Fpv2QuHY4knJsQyYGKEHFGw3eMBwc1U

            Connecting to: 0.0.0.0:9002
            {
            "result" : {
            "ledger_current_index" : 21741,
            "receive_currencies" : ["USD","LTC"],
            "send_currencies" : ["USD","LTC"],
            "status" : "success"
            }
            }
        ]]><cli_example>
        <rpc_example><![CDATA[
            > curl -X POST -d \
            '{ "method" : "account_currencies", "params" : [ { "account" : "gM4Fpv2QuHY4knJsQyYGKEHFGw3eMBwc1U", "ledger_index" : 400 } ] }' \
            http://public-01.gostellar.org:9002

            {
            "result":{
            "ledger_index":400,
            "receive_currencies":["USD","EUR"],
            "send_currencies":["USD","BTC"],
            "status":"success"
            }
            }
        ]]></rpc_example>
        <ws_example><![CDATA[
            { "command" : "account_currencies", "id":4, "account" : "gM4Fpv2QuHY4knJsQyYGKEHFGw3eMBwc1U", "ledger_hash":"876BD33202CBBF87D756E61DA74F5235B38D819BFD2E1C17DE7B2334EFDD0B2D" }

            {
            "id":4,
            "result":{
            "ledger_hash":"876BD33202CBBF87D756E61DA74F5235B38D819BFD2E1C17DE7B2334EFDD0B2D",
            "ledger_index":21755,
            "receive_currencies":["ZAR"],
            "send_currencies":["ZAR"]
            },
            "status":"success",
            "type":"response"
            }
        ]]></ws_example>
    </command>

    <command>
        <name>account_lines</name>
        <admin>false</admin>
        <desc>
            Gets a list of all trust lines a particular account is a part of. A trust line is how credits are tracked in the Stellar network.
            A trust line has an account on either end, a currency , the amount each account trusts the other for in that currency, and a current balance.
        </desc>

        <argument>
            <name>account</name>
            <required>true</required>
            <desc>The account you are fetching the lines of. Account A.</desc>
        </argument>
        <argument>
            <name>peer</name>
            <desc>The account ID of another account. If specified will only return the trust lines from Account A to this peer.</desc>
        </argument>
        <common>ledger_index</common>

        <result>
            <name>account</name>
            <desc>The account on the other side of the trust line. Account B.</desc>
        </result>
        <result>
            <name>balance</name>
            <desc>The current balance of credit between A and B. Balance is positive if A is holding IOUs from B.</desc>
        </result>
        <result>
            <name>currency</name>
            <desc>The currency of the trust line.</desc>
        </result>
        <result>
            <name>limit</name>
            <desc>How much account A trusts account B for.</desc>
        </result>
        <result>
            <name>limit_peer</name>
            <desc>How much account B trusts account A for.</desc>
        </result>
        <result>
            <name>quality_in</name>
            <desc></desc>
        </result>
        <result>
            <name>quality_out</name>
            <desc></desc>
        </result>

        <cli_example><![CDATA[
            C:\internet\stellar2>rippled account_lines ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C
            Loading: "C:\internet\stellar2\rippled.cfg"
            Connecting to: 127.0.0.1:9002
            {
            "result" : {
            "account" : "ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C",
            "lines" : [
            {
            "account" : "gT5KkmymioQvnwjuRkWZVRzsszfPxLCvU",
            "balance" : "-5000",
            "currency" : "USD",
            "limit" : "0",
            "limit_peer" : "10000",
            "quality_in" : 0,
            "quality_out" : 0
            },
            {
            "account" : "gHJPw9kW8v4BsUyDnBR8ZHWo8aEkhUMeAq",
            "balance" : "0",
            "currency" : "USD",
            "limit" : "0",
            "limit_peer" : "10000",
            "quality_in" : 0,
            "quality_out" : 0
            }
            ],
            "status" : "success"
            }
            }
        ]]><cli_example>
        <rpc_example><![CDATA[
            > curl -X POST -d '{ "method" : "account_lines", "params" : [ { "account" : "ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb" } ] }' http://127.0.0.1:9002
            {"result":{"account":"ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb","lines":[{"account":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","balance":"10","currency":"BTC","limit":"10000","limit_peer":"0","quality_in":0,"quality_out":0}],"status":"success"}}

        ]]></rpc_example>
        <ws_example><![CDATA[
            { "command" : "account_lines", "id":24, "account" : "ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb" }
            {"id":24,"result":{"account":"ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb","lines":[{"account":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","balance":"10","currency":"BTC","limit":"10000","limit_peer":"0","quality_in":0,"quality_out":0}]},"status":"success","type":"response"}
        ]]></ws_example>
    </command>
    <command>
        <name>account_offers</name>
        <admin>false</admin>
        <desc>Gets a list of all the offers this account has made.</desc>

        <argument>
            <name>account</name>
            <required>true</required>
            <desc>The account you are getting the offers of.</desc>
        </argument>

        <cli_example><![CDATA[
            > stellard account_offers ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb
            Loading: "stellard.cfg"
            Connecting to: 0.0.0.0:39002
            {
            "result" : {
            "account" : "ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb",
            "offers" : [
            {
            "flags" : 0,
            "seq" : 47,
            "taker_gets" : {
            "currency" : "BTC",
            "issuer" : "ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C",
            "value" : "2.5"
            },
            "taker_pays" : {
            "currency" : "USD",
            "issuer" : "ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C",
            "value" : "1500"
            }
            },
            {
            "flags" : 0,
            "seq" : 48,
            "taker_gets" : {
            "currency" : "BTC",
            "issuer" : "ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C",
            "value" : "2.5"
            },
            "taker_pays" : {
            "currency" : "USD",
            "issuer" : "ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C",
            "value" : "1600"
            }
            }
            ],
            "status" : "success"
            }
            }

        ]]><cli_example>
        <rpc_example><![CDATA[
            curl -X POST -d '{ "method" : "account_offers", "params" : [ { "account" : "ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb" } ] }' http://public-01.gostellar.org:9002
            {"result":{"account":"ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb","offers":[{"flags":0,"seq":47,"taker_gets":{"currency":"BTC","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"2.5"},"taker_pays":{"currency":"USD","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"1500"}},{"flags":0,"seq":48,"taker_gets":{"currency":"BTC","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"2.5"},"taker_pays":{"currency":"USD","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"1600"}}],"status":"success"}}
        ]]></rpc_example>
        <ws_example><![CDATA[
            { "command" : "account_offers", "id":120, "account" : "ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb" }
            {"id":120,
            "result":{
            "account":"ganVp9o5emfzpwrG5QVUXqMv8AgLcdvySb",
            "offers":[
            {"flags":0,"seq":47,"taker_gets":{"currency":"BTC","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"2.5"},"taker_pays":{"currency":"USD","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"1500"}},
            {"flags":0,"seq":48,"taker_gets":{"currency":"BTC","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"2.5"},"taker_pays":{"currency":"USD","issuer":"ghj4kXtHfQcCaLQwpLJ11q2hq6248R7k9C","value":"1600"}}
            ]},
            "status":"success",
            "type":"response"}

        ]]></ws_example>
    </command>
    <command>
        <name>ping</name>
        <admin>false</admin>
        <desc>Command to test connectivity to stellard.</desc>

        <cli_example><![CDATA[ > stellard ping
{
   "result" : {
      "status" : "success"
   }
}]]><cli_example>
        <rpc_example><![CDATA[curl -X POST -d '{ "method" : "ping" }' http://public-01.gostellar.org:9002

            {"result":{"status":"success"}}]]></rpc_example>
        <ws_example><![CDATA[ { "command" : "ping" }

            {"result":{},"status":"success","type":"response"}]]></ws_example>
    </command>
    <command>
        <name>transaction_entry</name>
        <admin>false</admin>
        <desc>Get the details of a particular transaction.</desc>

        <argument>
            <name>tx_hash</name>
            <required>true</required>
            <desc>The hash of the transaction you are interested in.</desc>
        </argument>
        <argument>
            <name>ledger_index</name>
            <type>int</type>
            <desc>If you only want to look for the transaction in a particular ledger.</desc>
        </argument>


        <cli_example><![CDATA[

        ]]><cli_example>
        <rpc_example><![CDATA[

        ]]></rpc_example>
        <ws_example><![CDATA[

        ]]></ws_example>
    </command>
    <command>
        <name>wallet_propose</name>
        <admin>false</admin>
        <desc>Generates a random secret key and an accountID based on this key.</desc>

        <argument>
            <name>passphrase</name>
            <type>string</type>
            <desc>If specified it will create the secret key from a hash of the passphrase.</desc>
        </argument>


        <result>
            <name>account_id</name>
            <desc>The generated accountID. It will become a usable stellar account if someone sends stellars to it.</desc>
        </result>
        <result>
            <name>master_seed</name>
            <desc>The secret key in base58 format that corresponds to the accountID.</desc>
        </result>
        <result>
            <name>master_seed_hex</name>
            <desc>The secret key in hex format that corresponds to the accountID.</desc>
        </result>
        <result>
            <name>public_key</name>
            <desc>The public key in base58 format that corresponds to the accountID.</desc>
        </result>
        <result>
            <name>public_key_hex</name>
            <desc>The public key in hex format that corresponds to the accountID.</desc>
        </result>

        <cli_example><![CDATA[

        ]]><cli_example>
        <rpc_example><![CDATA[

        ]]></rpc_example>
        <ws_example><![CDATA[
            { "command" : "wallet_propose" }
            {"result":{
            "account_id":"g9yMgy1dxac5UBSxc1nxtVUyhw11qYPLcs",
            "master_seed":"s3YBKJpSJkyfoJQHHSaKwGPZyW73ThahyVjh7oehcQPq5T4ncHU",
            "master_seed_hex":"B70A1108710883663AE1B18356FB1BF99FAF3581939B1E6FC72A1FD83DE12910",
            "public_key":"pGFGGYRCkQHbHMbjQJJHU4SuduR5hU77kqr7EkhDd8quZF2xTAR",
            "public_key_hex":"CF8165969EEC1B05DC79CD0CE472AE827FC1CD6E0F8FEFDB394C2ED6379219E6"},
            "status":"success","type":"response"
            }
        ]]></ws_example>
    </command>
</commands>